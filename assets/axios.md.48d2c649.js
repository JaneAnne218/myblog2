import{_ as s,o as a,c as n,O as o}from"./chunks/framework.269db9bd.js";const F=JSON.parse('{"title":"axios","description":"","frontmatter":{},"headers":[],"relativePath":"axios.md","filePath":"axios.md"}'),l={name:"axios.md"},p=o(`<h1 id="axios" tabindex="-1">axios <a class="header-anchor" href="#axios" aria-label="Permalink to &quot;axios&quot;">​</a></h1><h2 id="_1-首先-在命令行中创建一个基本的node-js项目-并安装axios库。" tabindex="-1">1. 首先，在命令行中创建一个基本的Node.js项目，并安装axios库。 <a class="header-anchor" href="#_1-首先-在命令行中创建一个基本的node-js项目-并安装axios库。" aria-label="Permalink to &quot;1.  首先，在命令行中创建一个基本的Node.js项目，并安装axios库。&quot;">​</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">axios</span></span></code></pre></div><h2 id="_2-在项目根目录下创建一个index-js文件-并在其中编写代码。该代码会向一个api服务器发送get请求-并输出响应数据。" tabindex="-1">2. 在项目根目录下创建一个<code>index.js</code>文件，并在其中编写代码。该代码会向一个API服务器发送GET请求，并输出响应数据。 <a class="header-anchor" href="#_2-在项目根目录下创建一个index-js文件-并在其中编写代码。该代码会向一个api服务器发送get请求-并输出响应数据。" aria-label="Permalink to &quot;2.  在项目根目录下创建一个\`index.js\`文件，并在其中编写代码。该代码会向一个API服务器发送GET请求，并输出响应数据。&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> axios </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">axios</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">axios</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://jsonplaceholder.typicode.com/posts/1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">response</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">error</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">error</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="_3-运行该文件-查看控制台输出结果。" tabindex="-1">3. 运行该文件，查看控制台输出结果。 <a class="header-anchor" href="#_3-运行该文件-查看控制台输出结果。" aria-label="Permalink to &quot;3.  运行该文件，查看控制台输出结果。&quot;">​</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.js</span></span></code></pre></div><p>以上代码演示了如何使用axios库发起HTTP请求并处理响应数据</p>`,8),e=[p];function t(c,r,i,y,C,A){return a(),n("div",null,e)}const d=s(l,[["render",t]]);export{F as __pageData,d as default};
