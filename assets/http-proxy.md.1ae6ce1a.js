import{_ as s,o as a,c as n,V as l}from"./chunks/framework.4f64e5d5.js";const A=JSON.parse('{"title":"http-proxy","description":"http代理","frontmatter":{"title":"http-proxy","description":"http代理","date":"2022-7-10","tags":["工具"]},"headers":[],"relativePath":"http-proxy.md","filePath":"http-proxy.md","lastUpdated":1690439182000}'),p={name:"http-proxy.md"},o=l(`<h2 id="_1-使用以下命令来初始化一个新的-node-js-项目-并创建-package-json-文件" tabindex="-1">1. 使用以下命令来初始化一个新的 Node.js 项目，并创建 <code>package.json</code> 文件： <a class="header-anchor" href="#_1-使用以下命令来初始化一个新的-node-js-项目-并创建-package-json-文件" aria-label="Permalink to &quot;1. 使用以下命令来初始化一个新的 Node.js 项目，并创建 \`package.json\` 文件：&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span></span></code></pre></div><h2 id="_2-安装-http-proxy-模块。在终端或命令提示符窗口中运行以下命令" tabindex="-1">2. 安装 <code>http-proxy</code> 模块。在终端或命令提示符窗口中运行以下命令： <a class="header-anchor" href="#_2-安装-http-proxy-模块。在终端或命令提示符窗口中运行以下命令" aria-label="Permalink to &quot;2. 安装 \`http-proxy\` 模块。在终端或命令提示符窗口中运行以下命令：&quot;">​</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http-proxy</span></span></code></pre></div><h2 id="_3-创建代理服务器的代码文件-并将上面提供的示例代码复制粘贴到该文件中。" tabindex="-1">3. 创建代理服务器的代码文件，并将上面提供的示例代码复制粘贴到该文件中。 <a class="header-anchor" href="#_3-创建代理服务器的代码文件-并将上面提供的示例代码复制粘贴到该文件中。" aria-label="Permalink to &quot;3. 创建代理服务器的代码文件，并将上面提供的示例代码复制粘贴到该文件中。&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> http </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> httpProxy </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http-proxy</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 创建反向代理服务器</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> proxyServer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> httpProxy</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createServer</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://example.com</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 设置目标服务器</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 启动代理服务器并监听8080端口</span></span>
<span class="line"><span style="color:#A6ACCD;">proxyServer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">listen</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">8080</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">代理服务器已启动，正在监听 8080 端口...</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="_4-在终端或命令提示符窗口中执行以下命令来启动代理服务器" tabindex="-1">4. 在终端或命令提示符窗口中执行以下命令来启动代理服务器： <a class="header-anchor" href="#_4-在终端或命令提示符窗口中执行以下命令来启动代理服务器" aria-label="Permalink to &quot;4. 在终端或命令提示符窗口中执行以下命令来启动代理服务器：&quot;">​</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">node</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">filenam</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">.js</span></span></code></pre></div><p>其中，<code>&lt;filename&gt;</code> 是你的代码文件名（不包含扩展名）。 现在你可以在浏览器中访问 <code>http://localhost:8080</code>，代理服务器就会将请求转发到目标服务器上，并将响应返回给浏览器。 5. 问题 目标服务器，只能时http，不可以时https</p>`,9),e=[o];function t(c,r,y,D,i,C){return a(),n("div",null,e)}const h=s(p,[["render",t]]);export{A as __pageData,h as default};
